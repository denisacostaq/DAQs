syntax = "proto2";
package message;

enum ResponseStatus {
  OK = 0;
  FAILED = 1;
  INVALID_ARGUMENT = 2;
}

enum MessageType {
  REQUEST_SAVE_VALUE = 1;
  REQUEST_GET_VALUES = 2;
  RESPONSE_FAILURE = 3;
  RESPONSE_VALUES = 4;
}

// Package format
// ------------------------------
// | MetaHeader | Header | Body |
// ------------------------------
// To know more details about the specific messages checkout the documentation
// in the definitions.

/**
 * Request/Response: It's a prefix for header, contains the size of a Header.
 * @next Header
 */
message MetaHeader {
  required fixed64 headerSize = 1;
}

/**
 * Request/Response: It's a prefix for any msg, contains info about the body
 * type and the body size..
 * @previous MetaHeader
 * @next Any, a body.
 */
message Header {
  required MessageType msg_type = 1;
  required fixed64 bodySize = 2;
}

/**
 * Request: Save a variable value.
 * @next Failure packaged as body.
 */
message SaveValue {
  required string variable = 1;
  required double value = 2;
}

/**
 * Rsponse: Return information about a failure if any or just ok.
 * @prev Any packaged as body.
 */
message Failure {
  required ResponseStatus status = 1;
  optional string msg = 2;
}

/**
 * Request: Get variable values.
 * @next Failure packaged as body.
 * @next ValuesResponse packaged as body.
 */
message GetValues {
  required string variable = 1;
  optional int64 start = 2;
  optional int64 end = 3;
}

/**
 * A repeated file for ValuesResponse
 */
message VarValue {
  required string name = 1;
  required double value = 2;
  required uint64 timestamp = 3;
}

/**
 * Response: Return values.
 * @prev GetValues packaged as body.
 FIXME(denisacostaq@gmail.com): add required for values
 */
message ValuesResponse {
  repeated VarValue values = 1;
}
